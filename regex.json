[
  {
    "name": "myage",
    "regex": "^[0-9]{1,3}"
  },
  {
    "name": "myname",
    "regex": "ShuaiWang"
  },
  {
    "name": "myemail",
    "regex": "^[a-zA-Z0-9._%+-]{3}@[a-zA-Z0-9.-]{3}\\.[a-zA-Z]{2,4}$"
  },
  {
    "name": "fake-param",
    "regex": "always|asneeded"
  },
  {
    "name": "conformance",
    "regex": "DEFAULT|LENIENT"
  },
  {
    "name": "kylin.cube.cuboid-scheduler",
    "regex": "org\\.apache\\.kylin\\.cube\\.cuboid\\.(DefaultCuboidScheduler|TreeCuboidScheduler)"
  },
  {
    "name": "kylin.cube.segment-advisor",
    "regex": "org\\.apache\\.kylin\\.cube\\.CubeSegmentAdvisor"
  },
  {
    "name": "kylin.engine.spark-conf.spark.submit.deployMode",
    "regex": "cluster|client"
  },
  {
    "name": "kylin.env",
    "regex": "DEV|QA|UT"
  },
  {
    "name": "kylin.fact.table.dialect",
    "regex": "hive|mysql|postgresql|sqlserver|oracle"
  },
  {
    "name": "kylin.job.lock",
    "regex": "org.apache.kylin.job.lock.(MockJobLock|MockedDistributedLock|ZookeeperDistributedLock|ZookeeperJobLock)"
  },
  {
    "name": "kylin.metrics.event-time-zone",
    "regex": "GMT|UTC|Asia/Shanghai|America/Los_Angeles"
  },
  {
    "name": "kylin.query.calcite.extras-props.conformance",
    "regex": "DEFAULT|LENIENT"
  },
  {
    "name": "kylin.query.calcite.extras-props.quoting",
    "regex": "BACK_TICK|DOUBLE_QUOTE|BRACKET"
  },
  {
    "name": "kylin.query.calcite.extras-props.unquotedCasing",
    "regex": "UNCHANGED|TO_UPPER|TO_LOWER"
  },
  {
    "name": "kylin.query.spark-conf.spark.driver.memoryOverhead",
    "regex": "^[0-9]{1,3}(g|G|m|M|k|K)$"
  },
  {
    "name": "kylin.query.spark-conf.spark.executor.memory",
    "regex": "^[0-9]{1,3}(g|G|m|M|k|K)$"
  },
  {
    "name": "kylin.query.spark-conf.spark.executor.memoryOverhead",
    "regex": "^[0-9]{1,3}(g|G|m|M|k|K)$"
  },
  {
    "name": "kylin.server.mode",
    "regex": "all|query|job|streaming"
  },
  {
    "name": "kylin.storage.hbase.compression-codec",
    "regex": "GZ|LZO|LZ4|SNAPPY|NONE"
  },
  {
    "name": "kylin.stream.metadata.store.type",
    "regex": "mock|zk"
  }
]